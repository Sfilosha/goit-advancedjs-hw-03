{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["const apiParams = new URLSearchParams({\n    key: \"10224742-53a1a7880f946c3462445b43a\",\n    image_type: \"photo\",\n    orientation: \"horizontal\",\n    safesearch: \"true\"\n})\n\nexport const getImages = searchQuery => {\n    return fetch(`https://pixabay.com/api/?${apiParams}&q=${searchQuery}`)\n    .then(response => {\n        if (!response.ok) {\n            throw new Error(response.status);\n        }\n        return response.json();\n    })\n};","export function createImageTemplate (pictureArr) {\n    return pictureArr.reduce((acc, el, idx, arr) => {\n        return acc +\n            `<li class=\"gallery-item\">\n            <a class=\"gallery-item-content\" href=\"${el.largeImageURL}\">\n                <img\n                    class=\"gallery-image\"\n                    src=\"${el.webformatURL}\"\n                    alt=\"${el.tags}\"\n                    />\n                <ul class=\"card-porperties\">\n                <li class=\"property-el\">\n                    <p class=\"property-title\">Likes</p>\n                    <p class=\"property-text\">${el.likes}</p>\n                </li>\n                <li class=\"property-el\">\n                    <p class=\"property-title\">Views</p>\n                    <p class=\"property-text\">${el.views}</p>\n                </li>\n                <li class=\"property-el\">\n                    <p class=\"property-title\">Comments</p>\n                    <p class=\"property-text\">${el.comments}</p>\n                </li>\n                <li class=\"property-el\">\n                    <p class=\"property-title\">Downloads</p>\n                    <p class=\"property-text\">${el.downloads}</p>\n                </li>\n                </ul>\n            </a>\n        </li>`\n    }, '')\n};","// IMPORT START\n// IziToast Import\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\niziToast.settings({\n    titleColor: 'white',\n    messageColor: 'white',\n    backgroundColor: 'red',\n    position: 'topRight',\n    maxWidth: 432,\n});\n\n// Simple Light Box\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\n// Other JS functions\nimport { getImages } from \"./js/pixabay-api.js\"\nimport { createImageTemplate } from \"./js/render-functions.js\"\n\n// IMPORT END\nconst galleryEl = document.querySelector(\".js-gallery\");\nconst formElement = document.querySelector(\"form\");\nconst preloaderElement = document.querySelector(\".loader\");\n\nconst submitQuery = formElement.addEventListener(\"submit\", event => {\n    event.preventDefault()\n\n    const formData = new FormData(formElement);\n    const searchQuery = formData.get(\"search-query\");\n\n    // Перевірка на пусте поле та пробіли\n    if (!searchQuery.trim()) {\n        alert('Please enter the search query')\n        return\n    }\n\n     preloaderElement.removeAttribute('hidden')\n\n    getImages(searchQuery)\n        .then(data => {\n            preloaderElement.setAttribute('hidden', '');\n        if (data.total === 0) {\n            iziToast.show({ message: `Sorry, there are no images matching your search query. Please try again!` });\n            return null;\n        }\n        // Create HTML markup for recieved images\n        const listImages = createImageTemplate(data.hits);\n        // HIDE PRELOADER HERE\n        return listImages;\n    })\n    .then(listImages => {\n        // Place recieved images in HTML\n        galleryEl.innerHTML = listImages;\n\n        let gallery = new SimpleLightbox('.js-gallery a', {\n        captionsData: 'alt',\n        captionDelay: 250,\n        });\n        gallery.refresh();\n        gallery.on('error.simplelightbox', function (e) {\n        console.log(e); // some usefull information\n        });\n\n    })\n    .catch(error => {\n            console.log(error)\n    });\n    \n})\n\n\n\n"],"names":["apiParams","getImages","searchQuery","response","createImageTemplate","pictureArr","acc","el","idx","arr","iziToast","galleryEl","formElement","preloaderElement","event","data","listImages","gallery","SimpleLightbox","e","error"],"mappings":"6vBAAA,MAAMA,EAAY,IAAI,gBAAgB,CAClC,IAAK,qCACL,WAAY,QACZ,YAAa,aACb,WAAY,MAChB,CAAC,EAEYC,EAAYC,GACd,MAAM,4BAA4BF,CAAS,MAAME,CAAW,EAAE,EACpE,KAAKC,GAAY,CACd,GAAI,CAACA,EAAS,GACV,MAAM,IAAI,MAAMA,EAAS,MAAM,EAEnC,OAAOA,EAAS,MACxB,CAAK,ECdE,SAASC,EAAqBC,EAAY,CAC7C,OAAOA,EAAW,OAAO,CAACC,EAAKC,EAAIC,EAAKC,IAC7BH,EACH;AAAA,oDACwCC,EAAG,aAAa;AAAA;AAAA;AAAA,2BAGzCA,EAAG,YAAY;AAAA,2BACfA,EAAG,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,+CAKaA,EAAG,KAAK;AAAA;AAAA;AAAA;AAAA,+CAIRA,EAAG,KAAK;AAAA;AAAA;AAAA;AAAA,+CAIRA,EAAG,QAAQ;AAAA;AAAA;AAAA;AAAA,+CAIXA,EAAG,SAAS;AAAA;AAAA;AAAA;AAAA,eAKpD,EAAE,CACT,CC1BAG,EAAS,SAAS,CACd,WAAY,QACZ,aAAc,QACd,gBAAiB,MACjB,SAAU,WACV,SAAU,GACd,CAAC,EAWD,MAAMC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAc,SAAS,cAAc,MAAM,EAC3CC,EAAmB,SAAS,cAAc,SAAS,EAErCD,EAAY,iBAAiB,SAAUE,GAAS,CAChEA,EAAM,eAAgB,EAGtB,MAAMZ,EADW,IAAI,SAASU,CAAW,EACZ,IAAI,cAAc,EAG/C,GAAI,CAACV,EAAY,OAAQ,CACrB,MAAM,+BAA+B,EACrC,MACH,CAEAW,EAAiB,gBAAgB,QAAQ,EAE1CZ,EAAUC,CAAW,EAChB,KAAKa,IACFF,EAAiB,aAAa,SAAU,EAAE,EAC1CE,EAAK,QAAU,GACfL,EAAS,KAAK,CAAE,QAAS,0EAA4E,CAAA,EAC9F,MAGQN,EAAoBW,EAAK,IAAI,EAGnD,EACA,KAAKC,GAAc,CAEhBL,EAAU,UAAYK,EAEtB,IAAIC,EAAU,IAAIC,EAAe,gBAAiB,CAClD,aAAc,MACd,aAAc,GACtB,CAAS,EACDD,EAAQ,QAAO,EACfA,EAAQ,GAAG,uBAAwB,SAAUE,EAAG,CAChD,QAAQ,IAAIA,CAAC,CACrB,CAAS,CAET,CAAK,EACA,MAAMC,GAAS,CACR,QAAQ,IAAIA,CAAK,CAC7B,CAAK,CAEL,CAAC"}